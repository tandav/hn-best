#!/usr/bin/env python3.6

from subprocess import run
import sys

WORK_GIT_DIR='../hn-best'
BARE_GIT_DIR='.'


print('================================')
# run('pwd', check=True)

print(sys.version)
old_commit, new_commit, ref = sys.stdin.read().split()


if ref == 'refs/heads/master':
    print('master ref received.  Deploying master branch to production...')

    run(['git', '--work-tree', WORK_GIT_DIR, '--git-dir', BARE_GIT_DIR, 'checkout', '-f'], check=True) # check=True: if process exits with a non-zero exit code, a CalledProcessError exception will be raised
    run(['git', 'show', '--stat', new_commit], check=True)
    # place there other build commands

    print('deployed successfully')
else:
    print(f'Ref {ref} successfully received.  Doing nothing: only the master branch can be deployed on this server.')

print('================================')

'''
- [Simple automated GIT Deployment using Hooks](https://gist.github.com/noelboss/3fe13927025b89757f8fb12e9066f2fa#file-post-receive)
- [How To Use Git Hooks To Automate Development and Deployment Tasks | DigitalOcean](https://www.digitalocean.com/community/tutorials/how-to-use-git-hooks-to-automate-development-and-deployment-tasks)
- [Git Deploying a Website - YouTube](https://www.youtube.com/watch?v=9qIK8ZC9BnU)
- google: deploy using git hooks
- also: https://stackoverflow.com/a/37861972/4204843
'''
